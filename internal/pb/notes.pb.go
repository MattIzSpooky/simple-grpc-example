// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/notes.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Note struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // uuid
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Created       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Updated       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated,proto3" json:"updated,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Note) Reset() {
	*x = Note{}
	mi := &file_proto_notes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Note) ProtoMessage() {}

func (x *Note) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Note.ProtoReflect.Descriptor instead.
func (*Note) Descriptor() ([]byte, []int) {
	return file_proto_notes_proto_rawDescGZIP(), []int{0}
}

func (x *Note) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Note) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Note) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Note) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type CreateNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Description   string                 `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	mi := &file_proto_notes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_notes_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNoteRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteResponse) Reset() {
	*x = CreateNoteResponse{}
	mi := &file_proto_notes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteResponse) ProtoMessage() {}

func (x *CreateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteResponse.ProtoReflect.Descriptor instead.
func (*CreateNoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_notes_proto_rawDescGZIP(), []int{2}
}

func (x *CreateNoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type UpdateNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNoteRequest) Reset() {
	*x = UpdateNoteRequest{}
	mi := &file_proto_notes_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteRequest) ProtoMessage() {}

func (x *UpdateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notes_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteRequest.ProtoReflect.Descriptor instead.
func (*UpdateNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_notes_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNoteRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Note          *Note                  `protobuf:"bytes,1,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNoteResponse) Reset() {
	*x = UpdateNoteResponse{}
	mi := &file_proto_notes_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNoteResponse) ProtoMessage() {}

func (x *UpdateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notes_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNoteResponse.ProtoReflect.Descriptor instead.
func (*UpdateNoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_notes_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateNoteResponse) GetNote() *Note {
	if x != nil {
		return x.Note
	}
	return nil
}

type GetAllNotesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllNotesRequest) Reset() {
	*x = GetAllNotesRequest{}
	mi := &file_proto_notes_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNotesRequest) ProtoMessage() {}

func (x *GetAllNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notes_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNotesRequest.ProtoReflect.Descriptor instead.
func (*GetAllNotesRequest) Descriptor() ([]byte, []int) {
	return file_proto_notes_proto_rawDescGZIP(), []int{5}
}

type GetAllNotesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notes         []*Note                `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllNotesResponse) Reset() {
	*x = GetAllNotesResponse{}
	mi := &file_proto_notes_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllNotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllNotesResponse) ProtoMessage() {}

func (x *GetAllNotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notes_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllNotesResponse.ProtoReflect.Descriptor instead.
func (*GetAllNotesResponse) Descriptor() ([]byte, []int) {
	return file_proto_notes_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllNotesResponse) GetNotes() []*Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

type DeleteNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteRequest) Reset() {
	*x = DeleteNoteRequest{}
	mi := &file_proto_notes_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteRequest) ProtoMessage() {}

func (x *DeleteNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notes_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteNoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_notes_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNoteResponse) Reset() {
	*x = DeleteNoteResponse{}
	mi := &file_proto_notes_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNoteResponse) ProtoMessage() {}

func (x *DeleteNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_notes_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNoteResponse.ProtoReflect.Descriptor instead.
func (*DeleteNoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_notes_proto_rawDescGZIP(), []int{8}
}

var File_proto_notes_proto protoreflect.FileDescriptor

const file_proto_notes_proto_rawDesc = "" +
	"\n" +
	"\x11proto/notes.proto\x12\x05notes\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa4\x01\n" +
	"\x04Note\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x124\n" +
	"\acreated\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\acreated\x124\n" +
	"\aupdated\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aupdated\"5\n" +
	"\x11CreateNoteRequest\x12 \n" +
	"\vdescription\x18\x01 \x01(\tR\vdescription\"5\n" +
	"\x12CreateNoteResponse\x12\x1f\n" +
	"\x04note\x18\x01 \x01(\v2\v.notes.NoteR\x04note\"E\n" +
	"\x11UpdateNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"5\n" +
	"\x12UpdateNoteResponse\x12\x1f\n" +
	"\x04note\x18\x01 \x01(\v2\v.notes.NoteR\x04note\"\x14\n" +
	"\x12GetAllNotesRequest\"8\n" +
	"\x13GetAllNotesResponse\x12!\n" +
	"\x05notes\x18\x01 \x03(\v2\v.notes.NoteR\x05notes\"#\n" +
	"\x11DeleteNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x14\n" +
	"\x12DeleteNoteResponse2\x9d\x02\n" +
	"\fNotesService\x12A\n" +
	"\n" +
	"CreateNote\x12\x18.notes.CreateNoteRequest\x1a\x19.notes.CreateNoteResponse\x12A\n" +
	"\n" +
	"UpdateNote\x12\x18.notes.UpdateNoteRequest\x1a\x19.notes.UpdateNoteResponse\x12D\n" +
	"\vGetAllNotes\x12\x19.notes.GetAllNotesRequest\x1a\x1a.notes.GetAllNotesResponse\x12A\n" +
	"\n" +
	"DeleteNote\x12\x18.notes.DeleteNoteRequest\x1a\x19.notes.DeleteNoteResponseB\x10Z\x0einternal/pb;pbb\x06proto3"

var (
	file_proto_notes_proto_rawDescOnce sync.Once
	file_proto_notes_proto_rawDescData []byte
)

func file_proto_notes_proto_rawDescGZIP() []byte {
	file_proto_notes_proto_rawDescOnce.Do(func() {
		file_proto_notes_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_notes_proto_rawDesc), len(file_proto_notes_proto_rawDesc)))
	})
	return file_proto_notes_proto_rawDescData
}

var file_proto_notes_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_notes_proto_goTypes = []any{
	(*Note)(nil),                  // 0: notes.Note
	(*CreateNoteRequest)(nil),     // 1: notes.CreateNoteRequest
	(*CreateNoteResponse)(nil),    // 2: notes.CreateNoteResponse
	(*UpdateNoteRequest)(nil),     // 3: notes.UpdateNoteRequest
	(*UpdateNoteResponse)(nil),    // 4: notes.UpdateNoteResponse
	(*GetAllNotesRequest)(nil),    // 5: notes.GetAllNotesRequest
	(*GetAllNotesResponse)(nil),   // 6: notes.GetAllNotesResponse
	(*DeleteNoteRequest)(nil),     // 7: notes.DeleteNoteRequest
	(*DeleteNoteResponse)(nil),    // 8: notes.DeleteNoteResponse
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_proto_notes_proto_depIdxs = []int32{
	9, // 0: notes.Note.created:type_name -> google.protobuf.Timestamp
	9, // 1: notes.Note.updated:type_name -> google.protobuf.Timestamp
	0, // 2: notes.CreateNoteResponse.note:type_name -> notes.Note
	0, // 3: notes.UpdateNoteResponse.note:type_name -> notes.Note
	0, // 4: notes.GetAllNotesResponse.notes:type_name -> notes.Note
	1, // 5: notes.NotesService.CreateNote:input_type -> notes.CreateNoteRequest
	3, // 6: notes.NotesService.UpdateNote:input_type -> notes.UpdateNoteRequest
	5, // 7: notes.NotesService.GetAllNotes:input_type -> notes.GetAllNotesRequest
	7, // 8: notes.NotesService.DeleteNote:input_type -> notes.DeleteNoteRequest
	2, // 9: notes.NotesService.CreateNote:output_type -> notes.CreateNoteResponse
	4, // 10: notes.NotesService.UpdateNote:output_type -> notes.UpdateNoteResponse
	6, // 11: notes.NotesService.GetAllNotes:output_type -> notes.GetAllNotesResponse
	8, // 12: notes.NotesService.DeleteNote:output_type -> notes.DeleteNoteResponse
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_notes_proto_init() }
func file_proto_notes_proto_init() {
	if File_proto_notes_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_notes_proto_rawDesc), len(file_proto_notes_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_notes_proto_goTypes,
		DependencyIndexes: file_proto_notes_proto_depIdxs,
		MessageInfos:      file_proto_notes_proto_msgTypes,
	}.Build()
	File_proto_notes_proto = out.File
	file_proto_notes_proto_goTypes = nil
	file_proto_notes_proto_depIdxs = nil
}
